version: "3.5"

networks:
  amsterdam-bouwdossiers:
    name: amsterdam-bouwdossiers
    driver: bridge

x-app: &base-app
  build:
    context: .
    target: app
  depends_on:
    database:
      condition: service_healthy
    azurite:
      condition: service_healthy
  volumes:
    - ./src:/src
    - ./deploy:/deploy
  networks:
    - amsterdam-bouwdossiers
    - default
  environment: &base-app-env
    SECRET_KEY: 'dev'
    DATABASE_HOST: 'database'
    PYTHONBREAKPOINT: true
    UWSGI_STATIC_MAP: '/iiif-metadata/static=/static'
    AZURITE_STORAGE_CONNECTION_STRING: 'AccountName=devstoreaccount1;AccountKey=Eby8vdM02xNOcqFlqUwJPLlmEtlCDXJ1OUzFT50uSRZ6IFsuFq2UVErCz4I6tq/K1SZFPTOtr/KBHBeksoGMGw==;DefaultEndpointsProtocol=http;BlobEndpoint=http://azurite:10000/devstoreaccount1/;'

services:
  database:
    image: postgis/postgis:15-3.4
    ports:
      - 5432
    environment:
      POSTGRES_DB: dev
      POSTGRES_USER: dev
      POSTGRES_PASSWORD: dev
    volumes:
      - "~/.ssh/datapunt.key:/root/.ssh/datapunt.key"
    healthcheck:
      test: [ "CMD", "pg_isready", "-q", "-d", "dev", "-U", "dev" ]
      interval: 10s
      timeout: 5s
      retries: 3

  azurite:
    image: mcr.microsoft.com/azure-storage/azurite
    ports:
      - 10000 # Blob service
    healthcheck:
      test: nc 127.0.0.1 10000 -z
      interval: 1s
      retries: 30

  app:
    <<: *base-app
    build:
      context: .
      target: app
    image: ${REGISTRY:-localhost:5000}/${REPOSITORY:-opdrachten/iiif-metadata-server}:${VERSION:-latest}
    depends_on:
      database:
        condition: service_healthy

  dev:
    <<: *base-app
    hostname: metadata-server
    build:
      context: .
      target: dev
    environment:
      <<: *base-app-env
      DEBUG: 'true'
      USE_JWKS_TEST_KEY: 'true'
    command: python manage.py runserver 0.0.0.0:8000

  test:
    <<: *base-app
    build:  
      context: .
      target: tests
    environment:
      <<: *base-app-env
      USE_JWKS_TEST_KEY: 'true'
      SECRET_KEY: 'insecure'