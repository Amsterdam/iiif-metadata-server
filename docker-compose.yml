version: "3.4"
services:
  database:
    image: amsterdam/postgres11
    ports:
      - 5432
    environment:
      POSTGRES_DB: iiif_metadata_server
      POSTGRES_USER: iiif_metadata_server
      POSTGRES_PASSWORD: insecure
    volumes:
      - "~/.ssh/datapunt.key:/root/.ssh/datapunt.key"

  app:
    build:
      context: .
      target: app
    image: docker-registry.data.amsterdam.nl/datapunt/iiif-metadata-server:${VERSION:-latest}
    ports:
      - 8000:8000
    environment:
      - SECRET_KEY
    volumes:
      - ./src:/src
      - ./deploy:/deploy
    depends_on:
      - database

  dev:
    build:
      context: .
      target: dev
    ports:
      - 8000:8000
    environment:
      - DATAPUNT_API_URL=${DATAPUNT_API_URL:-https://bouwdossiers.amsterdam.nl/}
      - DEBUG=true
      - SECRET_KEY=dev
      - JWKS_USE_TEST_KEY=true
      - PYTHONBREAKPOINT
      - UWSGI_STATIC_MAP=/iiif-metadata/static=/static
    volumes:
      - ./src:/src
      - ./deploy:/deploy
    depends_on:
      - database
    entrypoint: /deploy/wait-for-it.sh database:5432 --
    command: python manage.py runserver 0.0.0.0:8000

  test:
    build:
      context: .
      target: tests
    ports:
      - "8000:8000"
    volumes:
      - ./src:/src
    depends_on:
      - database
    environment:
      - DATAPUNT_API_URL=${DATAPUNT_API_URL:-https://bouwdossiers.amsterdam.nl/}
      - SECRET_KEY=insecure
      - JWKS_USE_TEST_KEY=true
      - DATABASE_NAME=iiif_metadata_server
      - DATABASE_USER=iiif_metadata_server
      - DATABASE_PASSWORD=insecure
    entrypoint: /deploy/wait-for-it.sh database:5432 --

  run_import:
    build:
      context: .
      target: tests
    ports:
      - "8000:8000"
    volumes:
      - ./src:/src
    depends_on:
      - database
    environment:
      - DATAPUNT_API_URL=${DATAPUNT_API_URL:-https://bouwdossiers.amsterdam.nl/}
      - SECRET_KEY=insecure
      - BOUWDOSSIERS_OBJECTSTORE_CONTAINER
      - BOUWDOSSIERS_OBJECTSTORE_PASSWORD
    entrypoint: /deploy/wait-for-it.sh database:5432 --
    command: python manage.py run_import --skip_validate_import
