# Generated by Django 4.1.13 on 2024-02-08 12:02

import django.contrib.gis.db.models.fields
import django.db.models.deletion
import django.db.models.manager
from django.db import migrations, models

import bag.models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Ligplaats",
            fields=[
                (
                    "id",
                    models.CharField(
                        db_column="identificatie",
                        max_length=16,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("document_mutatie", models.DateField(db_column="documentdatum")),
                (
                    "document_nummer",
                    models.CharField(db_column="documentnummer", max_length=20),
                ),
                ("begin_geldigheid", models.DateField(db_column="begingeldigheid")),
                (
                    "einde_geldigheid",
                    models.DateField(db_column="eindgeldigheid", null=True),
                ),
                (
                    "indicatie_geconstateerd",
                    models.BooleanField(db_column="geconstateerd"),
                ),
                (
                    "geometrie",
                    django.contrib.gis.db.models.fields.PolygonField(srid=28992),
                ),
                (
                    "status",
                    models.CharField(db_column="statusomschrijving", max_length=80),
                ),
                (
                    "buurt",
                    models.CharField(
                        db_column="ligtinbuurtid", max_length=16, null=True
                    ),
                ),
                ("volgnummer", models.IntegerField()),
                ("registratiedatum", models.DateField()),
                ("statuscode", models.CharField(max_length=1)),
                (
                    "heeft_hoofdadres",
                    models.CharField(
                        db_column="heefthoofdadresid", max_length=16, null=True
                    ),
                ),
                (
                    "dossier",
                    models.CharField(
                        db_column="heeftdossierid", max_length=16, null=True
                    ),
                ),
                (
                    "proces_code",
                    models.CharField(
                        db_column="bagprocescode", max_length=4, null=True
                    ),
                ),
                (
                    "proces_omschrijving",
                    models.CharField(
                        db_column="bagprocesomschrijving", max_length=80, null=True
                    ),
                ),
            ],
            options={
                "db_table": "bag_ligplaats",
            },
            bases=(models.Model, bag.models.BagObject),
        ),
        migrations.CreateModel(
            name="Openbareruimte",
            fields=[
                (
                    "id",
                    models.CharField(
                        db_column="identificatie",
                        max_length=16,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("document_mutatie", models.DateField(db_column="documentdatum")),
                (
                    "document_nummer",
                    models.CharField(db_column="documentnummer", max_length=20),
                ),
                ("begin_geldigheid", models.DateField(db_column="begingeldigheid")),
                (
                    "einde_geldigheid",
                    models.DateField(db_column="eindgeldigheid", null=True),
                ),
                ("type", models.CharField(db_column="typeomschrijving", max_length=80)),
                ("naam", models.CharField(max_length=80)),
                ("naam_nen", models.CharField(db_column="naamnen", max_length=80)),
                (
                    "geometrie",
                    django.contrib.gis.db.models.fields.GeometryField(
                        null=True, srid=28992
                    ),
                ),
                (
                    "omschrijving",
                    models.TextField(db_column="beschrijvingnaam", null=True),
                ),
                (
                    "woonplaats_id",
                    models.CharField(
                        db_column="ligtinwoonplaatsid", max_length=16, null=True
                    ),
                ),
                (
                    "status",
                    models.CharField(db_column="statusomschrijving", max_length=80),
                ),
                ("volgnummer", models.IntegerField()),
                ("registratiedatum", models.DateField()),
                ("straatcode", models.CharField(max_length=16, null=True)),
                (
                    "straatnaam",
                    models.CharField(
                        db_column="straatnaamptt", max_length=80, null=True
                    ),
                ),
                ("statuscode", models.CharField(max_length=1)),
                ("geconstateerd", models.BooleanField()),
                ("typecode", models.CharField(max_length=1)),
                (
                    "dossier",
                    models.CharField(
                        db_column="heeftdossierid", max_length=16, null=True
                    ),
                ),
                (
                    "proces_code",
                    models.CharField(
                        db_column="bagprocescode", max_length=4, null=True
                    ),
                ),
                (
                    "proces_omschrijving",
                    models.CharField(
                        db_column="bagprocesomschrijving", max_length=80, null=True
                    ),
                ),
            ],
            options={
                "db_table": "bag_openbareruimte",
            },
            managers=[
                ("transformed_geo_objects", django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name="Pand",
            fields=[
                (
                    "id",
                    models.CharField(
                        db_column="identificatie",
                        max_length=16,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("document_mutatie", models.DateField(db_column="documentdatum")),
                (
                    "document_nummer",
                    models.CharField(db_column="documentnummer", max_length=80),
                ),
                ("begin_geldigheid", models.DateField(db_column="begingeldigheid")),
                (
                    "einde_geldigheid",
                    models.DateField(db_column="eindgeldigheid", null=True),
                ),
                (
                    "bouwjaar",
                    models.IntegerField(db_column="oorspronkelijkbouwjaar", null=True),
                ),
                (
                    "laagste_bouwlaag",
                    models.IntegerField(db_column="laagstebouwlaag", null=True),
                ),
                (
                    "hoogste_bouwlaag",
                    models.IntegerField(db_column="hoogstebouwlaag", null=True),
                ),
                (
                    "geometrie",
                    django.contrib.gis.db.models.fields.PolygonField(srid=28992),
                ),
                (
                    "pandnaam",
                    models.CharField(db_column="naam", max_length=80, null=True),
                ),
                (
                    "bouwblok",
                    models.CharField(
                        db_column="ligtinbouwblokid", max_length=16, null=True
                    ),
                ),
                (
                    "bouwlagen",
                    models.IntegerField(db_column="aantalbouwlagen", null=True),
                ),
                (
                    "ligging",
                    models.CharField(
                        db_column="liggingomschrijving", max_length=80, null=True
                    ),
                ),
                (
                    "type_woonobject",
                    models.CharField(
                        db_column="typewoonobject", max_length=80, null=True
                    ),
                ),
                (
                    "status",
                    models.CharField(db_column="statusomschrijving", max_length=80),
                ),
                ("volgnummer", models.IntegerField()),
                ("registratiedatum", models.DateField()),
                ("geconstateerd", models.BooleanField()),
                ("statuscode", models.CharField(max_length=3)),
                (
                    "ligging_code",
                    models.CharField(db_column="liggingcode", max_length=2, null=True),
                ),
                (
                    "buurt",
                    models.CharField(
                        db_column="ligtinbuurtid", max_length=16, null=True
                    ),
                ),
                (
                    "dossier",
                    models.CharField(
                        db_column="heeftdossierid", max_length=16, null=True
                    ),
                ),
                (
                    "proces_code",
                    models.CharField(
                        db_column="bagprocescode", max_length=4, null=True
                    ),
                ),
                (
                    "proces_omschrijving",
                    models.CharField(
                        db_column="bagprocesomschrijving", max_length=80, null=True
                    ),
                ),
            ],
            options={
                "db_table": "bag_pand",
            },
        ),
        migrations.CreateModel(
            name="Standplaats",
            fields=[
                (
                    "id",
                    models.CharField(
                        db_column="identificatie",
                        max_length=16,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("document_mutatie", models.DateField(db_column="documentdatum")),
                (
                    "document_nummer",
                    models.CharField(db_column="documentnummer", max_length=20),
                ),
                ("begin_geldigheid", models.DateField(db_column="begingeldigheid")),
                (
                    "einde_geldigheid",
                    models.DateField(db_column="eindgeldigheid", null=True),
                ),
                (
                    "indicatie_geconstateerd",
                    models.BooleanField(db_column="geconstateerd"),
                ),
                (
                    "geometrie",
                    django.contrib.gis.db.models.fields.PolygonField(srid=28992),
                ),
                (
                    "buurt",
                    models.CharField(
                        db_column="ligtinbuurtid", max_length=16, null=True
                    ),
                ),
                (
                    "status",
                    models.CharField(db_column="statusomschrijving", max_length=80),
                ),
                ("volgnummer", models.IntegerField()),
                ("registratiedatum", models.DateField()),
                ("statuscode", models.CharField(max_length=1)),
                (
                    "hoofdadres",
                    models.CharField(
                        db_column="heefthoofdadresid", max_length=16, null=True
                    ),
                ),
                (
                    "dossier",
                    models.CharField(
                        db_column="heeftdossierid", max_length=16, null=True
                    ),
                ),
                (
                    "proces_code",
                    models.CharField(
                        db_column="bagprocescode", max_length=4, null=True
                    ),
                ),
                (
                    "proces_omschrijving",
                    models.CharField(
                        db_column="bagprocesomschrijving", max_length=80, null=True
                    ),
                ),
            ],
            options={
                "db_table": "bag_standplaats",
            },
            bases=(models.Model, bag.models.BagObject),
        ),
        migrations.CreateModel(
            name="Verblijfsobject",
            fields=[
                (
                    "id",
                    models.CharField(
                        db_column="identificatie",
                        max_length=16,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("document_mutatie", models.DateField(db_column="documentdatum")),
                (
                    "document_nummer",
                    models.CharField(db_column="documentnummer", max_length=80),
                ),
                ("begin_geldigheid", models.DateField(db_column="begingeldigheid")),
                (
                    "einde_geldigheid",
                    models.DateField(db_column="eindgeldigheid", null=True),
                ),
                ("oppervlakte", models.IntegerField(null=True)),
                (
                    "verdieping_toegang",
                    models.CharField(
                        db_column="verdiepingtoegang", max_length=80, null=True
                    ),
                ),
                (
                    "aantal_eenheden_complex",
                    models.IntegerField(db_column="aantaleenhedencomplex", null=True),
                ),
                (
                    "bouwlagen",
                    models.IntegerField(db_column="aantalbouwlagen", null=True),
                ),
                (
                    "aantal_kamers",
                    models.IntegerField(db_column="aantalkamers", null=True),
                ),
                (
                    "indicatie_geconstateerd",
                    models.BooleanField(db_column="geconstateerd"),
                ),
                (
                    "geometrie",
                    django.contrib.gis.db.models.fields.GeometryField(
                        null=True, srid=28992
                    ),
                ),
                (
                    "buurt",
                    models.CharField(
                        db_column="ligtinbuurtid", max_length=16, null=True
                    ),
                ),
                (
                    "gebruiksdoel_gezondheidszorgfunctie",
                    models.CharField(
                        db_column="gebruiksdoelgezondheidszorgfunctieomschrijving",
                        max_length=80,
                        null=True,
                    ),
                ),
                (
                    "gebruiksdoel_woonfunctie",
                    models.CharField(
                        db_column="gebruiksdoelwoonfunctieomschrijving",
                        max_length=80,
                        null=True,
                    ),
                ),
                (
                    "hoogste_bouwlaag",
                    models.IntegerField(db_column="hoogstebouwlaag", null=True),
                ),
                (
                    "laagste_bouwlaag",
                    models.IntegerField(db_column="laagstebouwlaag", null=True),
                ),
                (
                    "status",
                    models.CharField(
                        db_column="statusomschrijving", max_length=80, null=True
                    ),
                ),
                (
                    "reden_afvoer",
                    models.CharField(
                        db_column="redenafvoeromschrijving", max_length=80, null=True
                    ),
                ),
                (
                    "reden_opvoer",
                    models.CharField(
                        db_column="redenopvoeromschrijving", max_length=80, null=True
                    ),
                ),
                (
                    "eigendomsverhouding",
                    models.CharField(
                        db_column="eigendomsverhoudingomschrijving",
                        max_length=80,
                        null=True,
                    ),
                ),
                (
                    "gebruiksdoel",
                    models.CharField(
                        db_column="feitelijkgebruikomschrijving",
                        max_length=80,
                        null=True,
                    ),
                ),
                ("volgnummer", models.IntegerField()),
                ("registratiedatum", models.DateField()),
                ("cbsnummer", models.CharField(max_length=16, null=True)),
                (
                    "indicatie_woningvoorraad",
                    models.CharField(
                        db_column="indicatiewoningvoorraad", max_length=1, null=True
                    ),
                ),
                (
                    "financierings_code",
                    models.CharField(
                        db_column="financieringscodecode", max_length=4, null=True
                    ),
                ),
                (
                    "financierings_omschrijving",
                    models.CharField(
                        db_column="financieringscodeomschrijving",
                        max_length=80,
                        null=True,
                    ),
                ),
                (
                    "hoofdadres",
                    models.CharField(
                        db_column="heefthoofdadresid", max_length=16, null=True
                    ),
                ),
                ("status_code", models.IntegerField(db_column="statuscode", null=True)),
                (
                    "gebruiksdoel_woonfunctie_code",
                    models.CharField(
                        db_column="gebruiksdoelwoonfunctiecode", max_length=4, null=True
                    ),
                ),
                (
                    "gebruiksdoel_gezondheidszorgfunctie_code",
                    models.CharField(
                        db_column="gebruiksdoelgezondheidszorgfunctiecode",
                        max_length=4,
                        null=True,
                    ),
                ),
                (
                    "eigendomsverhouding_code",
                    models.CharField(
                        db_column="eigendomsverhoudingcode", max_length=4, null=True
                    ),
                ),
                (
                    "feitelijk_gebruik_code",
                    models.CharField(
                        db_column="feitelijkgebruikcode", max_length=4, null=True
                    ),
                ),
                (
                    "reden_opvoer_code",
                    models.CharField(
                        db_column="redenopvoercode", max_length=4, null=True
                    ),
                ),
                (
                    "reden_afvoer_code",
                    models.CharField(
                        db_column="redenafvoercode", max_length=4, null=True
                    ),
                ),
                (
                    "dossier",
                    models.CharField(
                        db_column="heeftdossierid", max_length=16, null=True
                    ),
                ),
                (
                    "proces_code",
                    models.CharField(
                        db_column="bagprocescode", max_length=4, null=True
                    ),
                ),
                (
                    "proces_omschrijving",
                    models.CharField(
                        db_column="bagprocesomschrijving", max_length=80, null=True
                    ),
                ),
            ],
            options={
                "db_table": "bag_verblijfsobject",
            },
            bases=(models.Model, bag.models.BagObject),
        ),
        migrations.CreateModel(
            name="Verblijfsobjectpandrelatie",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "pand",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT, to="bag.pand"
                    ),
                ),
                (
                    "verblijfsobject",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="bag.verblijfsobject",
                    ),
                ),
            ],
            options={
                "db_table": "bag_verblijfsobjectpandrelatie",
            },
        ),
        migrations.AddField(
            model_name="verblijfsobject",
            name="panden",
            field=models.ManyToManyField(
                related_name="verblijfsobjecten",
                through="bag.Verblijfsobjectpandrelatie",
                to="bag.pand",
            ),
        ),
        migrations.CreateModel(
            name="Nummeraanduiding",
            fields=[
                (
                    "id",
                    models.CharField(
                        db_column="identificatie",
                        max_length=16,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("document_mutatie", models.DateField(db_column="documentdatum")),
                (
                    "document_nummer",
                    models.CharField(db_column="documentnummer", max_length=40),
                ),
                ("begin_geldigheid", models.DateTimeField(db_column="begingeldigheid")),
                (
                    "eind_geldigheid",
                    models.DateTimeField(db_column="eindgeldigheid", null=True),
                ),
                ("huisnummer", models.IntegerField()),
                ("huisletter", models.CharField(max_length=1, null=True)),
                (
                    "huisnummer_toevoeging",
                    models.CharField(
                        db_column="huisnummertoevoeging", max_length=4, null=True
                    ),
                ),
                ("postcode", models.CharField(max_length=6, null=True)),
                (
                    "type_adres",
                    models.CharField(db_column="typeadres", max_length=80, null=True),
                ),
                (
                    "status",
                    models.CharField(
                        db_column="statusomschrijving", max_length=80, null=True
                    ),
                ),
                ("volgnummer", models.IntegerField()),
                ("registratiedatum", models.DateTimeField()),
                ("geconstateerd", models.BooleanField()),
                (
                    "woonplaats",
                    models.CharField(
                        db_column="ligtinwoonplaatsid", max_length=80, null=True
                    ),
                ),
                (
                    "type_adresseerbaar_object_code",
                    models.CharField(
                        db_column="typeadresseerbaarobjectcode", max_length=4, null=True
                    ),
                ),
                (
                    "type_adresseerbaar_object_omschrijving",
                    models.CharField(
                        db_column="typeadresseerbaarobjectomschrijving",
                        max_length=80,
                        null=True,
                    ),
                ),
                (
                    "status_code",
                    models.CharField(db_column="statuscode", max_length=4, null=True),
                ),
                (
                    "dossier",
                    models.CharField(
                        db_column="heeftdossierid", max_length=40, null=True
                    ),
                ),
                (
                    "proces_code",
                    models.CharField(
                        db_column="bagprocescode", max_length=4, null=True
                    ),
                ),
                (
                    "proces_omschrijving",
                    models.CharField(
                        db_column="bagprocesomschrijving", max_length=80, null=True
                    ),
                ),
                (
                    "ligplaats",
                    models.ForeignKey(
                        db_column="adresseertligplaatsid",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="nummeraanduidingen",
                        to="bag.ligplaats",
                    ),
                ),
                (
                    "openbare_ruimte",
                    models.ForeignKey(
                        db_column="ligtaanopenbareruimteid",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="nummeraanduidingen",
                        to="bag.openbareruimte",
                    ),
                ),
                (
                    "standplaats",
                    models.ForeignKey(
                        db_column="adresseertstandplaatsid",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="nummeraanduidingen",
                        to="bag.standplaats",
                    ),
                ),
                (
                    "verblijfsobject",
                    models.ForeignKey(
                        db_column="adresseertverblijfsobjectid",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="nummeraanduidingen",
                        to="bag.verblijfsobject",
                    ),
                ),
            ],
            options={
                "db_table": "bag_nummeraanduiding",
            },
        ),
    ]
